/// <reference types="node" />
import { Schema } from "borsh";
import { Connection, PublicKey } from "@solana/web3.js";
export declare const MINT_PREFIX: Buffer;
export declare const COLLECTION_PREFIX: Buffer;
export declare const METADATA_SIGNER: PublicKey;
export declare enum Tag {
    Uninitialized = 0,
    CentralState = 1,
    ActiveRecord = 2,
    InactiveRecord = 3
}
export declare class NftRecord {
    tag: Tag;
    nonce: number;
    nameAccount: PublicKey;
    owner: PublicKey;
    nftMint: PublicKey;
    static schema: Schema;
    constructor(obj: {
        tag: number;
        nonce: number;
        nameAccount: Uint8Array;
        owner: Uint8Array;
        nftMint: Uint8Array;
    });
    static deserialize(data: Buffer): NftRecord;
    static retrieve(connection: Connection, key: PublicKey): Promise<NftRecord>;
    static findKey(nameAccount: PublicKey, programId: PublicKey): Promise<[PublicKey, number]>;
}
