import{PublicKey as t,TransactionInstruction as e,SystemProgram as r,SYSVAR_RENT_PUBKEY as i}from"@solana/web3.js";import{Buffer as a}from"buffer";import{TOKEN_PROGRAM_ID as n,getMint as s,AccountLayout as o,getAssociatedTokenAddressSync as c,createAssociatedTokenAccountInstruction as u}from"@solana/spl-token";import l from"bn.js";import{serialize as w,deserializeUnchecked as f,deserialize as p}from"borsh";import{MINT_PREFIX as m,NAME_TOKENIZER_ID as d,getRecordFromMint as y,NftRecord as g}from"@bonfida/name-tokenizer";import{sha256 as h}from"@ethersproject/sha2";import{PythHttpClient as b,getPythProgramKeyForCluster as S}from"@pythnetwork/client";import*as k from"tweetnacl";class v extends l{toBuffer(){const t=super.toArray().reverse(),e=a.from(t);if(4===e.length)return e;if(e.length>4)throw new Error("Numberu32 too large");const r=a.alloc(4);return e.copy(r),r}static fromBuffer(t){if(4!==t.length)throw new Error(`Invalid buffer length: ${t.length}`);return new l([...t].reverse().map((t=>`00${t.toString(16)}`.slice(-2))).join(""),16)}}class E extends l{toBuffer(){const t=super.toArray().reverse(),e=a.from(t);if(8===e.length)return e;if(e.length>8)throw new Error("Numberu64 too large");const r=a.alloc(8);return e.copy(r),r}static fromBuffer(t){if(8!==t.length)throw new Error(`Invalid buffer length: ${t.length}`);return new l([...t].reverse().map((t=>`00${t.toString(16)}`.slice(-2))).join(""),16)}}function B(r,i,n,s,o,c,u,l,w,f,p){const m=[a.from(Int8Array.from([0])),new v(c.length).toBuffer(),c,u.toBuffer(),l.toBuffer()],d=a.concat(m),y=[{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:o,isSigner:!0,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!1}];return w?y.push({pubkey:w,isSigner:!0,isWritable:!1}):y.push({pubkey:new t(a.alloc(32)),isSigner:!1,isWritable:!1}),f?y.push({pubkey:f,isSigner:!1,isWritable:!1}):y.push({pubkey:new t(a.alloc(32)),isSigner:!1,isWritable:!1}),p&&y.push({pubkey:p,isSigner:!0,isWritable:!1}),new e({keys:y,programId:r,data:d})}function W(t,r,i,n,s){const o=[a.from(Int8Array.from([1])),i.toBuffer(),new v(n.length).toBuffer(),n],c=a.concat(o);return new e({keys:[{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!0,isWritable:!1}],programId:t,data:c})}function A(r,i,n,s,o,c,u){const l=[a.from(Int8Array.from([2])),n.toBuffer()],w=a.concat(l),f=[{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:u||s,isSigner:!0,isWritable:!1}];return o&&f.push({pubkey:o,isSigner:!0,isWritable:!1}),u&&c&&(o||f.push({pubkey:t.default,isSigner:!1,isWritable:!1}),f.push({pubkey:c,isSigner:!1,isWritable:!1})),new e({keys:f,programId:r,data:w})}function I(t,r,i,n){const s=[a.from(Int8Array.from([3]))],o=a.concat(s);return new e({keys:[{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!0,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!0}],programId:t,data:o})}class R{constructor(t){this.tag=9,this.name=t.name,this.space=t.space}serialize(){return w(R.schema,this)}getInstruction(t,i,s,o,c,u,l,w,f,p,m){const d=a.from(this.serialize()),y=[{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:o,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!0},{pubkey:u,isSigner:!1,isWritable:!0},{pubkey:r.programId,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!1},{pubkey:w,isSigner:!0,isWritable:!0},{pubkey:f,isSigner:!1,isWritable:!0},{pubkey:p,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:m,isSigner:!1,isWritable:!1}];return new e({keys:y,programId:t,data:d})}}R.schema=new Map([[R,{kind:"struct",fields:[["tag","u8"],["name","string"],["space","u32"]]}]]);class D{constructor(t){this.tag=5,this.name=t.name}serialize(){return w(D.schema,this)}getInstruction(r,i,n,s,o,c,u,l,w){const f=a.from(this.serialize());let p=[{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:n,isSigner:!1,isWritable:!1},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:t.default,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!1},{pubkey:u,isSigner:!0,isWritable:!0}];if(l){if(!w)throw new Error("Missing parent name owner");p.push({pubkey:l,isSigner:!1,isWritable:!0}),p.push({pubkey:w,isSigner:!0,isWritable:!1})}return new e({keys:p,programId:r,data:f})}}D.schema=new Map([[D,{kind:"struct",fields:[["tag","u8"],["name","string"]]}]]);class P{constructor(t){this.tag=13,this.name=t.name,this.space=t.space,this.referrerIdxOpt=t.referrerIdxOpt}serialize(){return w(P.schema,this)}getInstruction(t,r,i,n,s,o,c,u,l,w,f,p,m,d,y,g,h){const b=a.from(this.serialize());let S=[];return S.push({pubkey:r,isSigner:!1,isWritable:!1}),S.push({pubkey:i,isSigner:!1,isWritable:!1}),S.push({pubkey:n,isSigner:!1,isWritable:!0}),S.push({pubkey:s,isSigner:!1,isWritable:!0}),S.push({pubkey:o,isSigner:!1,isWritable:!1}),S.push({pubkey:c,isSigner:!1,isWritable:!1}),S.push({pubkey:u,isSigner:!0,isWritable:!0}),S.push({pubkey:l,isSigner:!1,isWritable:!0}),S.push({pubkey:w,isSigner:!1,isWritable:!1}),S.push({pubkey:f,isSigner:!1,isWritable:!1}),S.push({pubkey:p,isSigner:!1,isWritable:!1}),S.push({pubkey:m,isSigner:!1,isWritable:!0}),S.push({pubkey:d,isSigner:!1,isWritable:!1}),S.push({pubkey:y,isSigner:!1,isWritable:!1}),S.push({pubkey:g,isSigner:!1,isWritable:!1}),h&&S.push({pubkey:h,isSigner:!1,isWritable:!0}),new e({keys:S,programId:t,data:b})}}P.schema=new Map([[P,{kind:"struct",fields:[["tag","u8"],["name","string"],["space","u32"],["referrerIdxOpt",{kind:"option",type:"u16"}]]}]]);const H=new t("namesLPneVptA9Z5rqUDD9tMTWEJwofgaYwp8cawRkX"),L="SPL Name Service",z=new t("58PwtjSDuFHuUkYjH9BYnnQKHfwo9reZhC2zMJv9JPkx"),T=new t("jCebN34bUfdeUYJT13J1yG16XWQpt5PDx6Mse9GUqhR"),C=new t("ETp9eKXVv1dWwHSpsXRUuXHmw24PwRkttCGVgpZEY9zF"),F=new t("AUoZ3YAhV3b2rZeEH93UMZHXUZcTramBvb4d9YEVySkc"),N=new t("33m47vH6Eav6jr5Ry86XjhRft2jRBLDnDgPSHoquXi2Z"),M=new t("FvPH7PrVrLGKPfqaf3xJodFTjZriqrAXXLTVWEorTFBi"),x=new t("4YcexoW3r78zz16J2aqmukBLRwGq6rAvWzJpkYAXqebv"),G=96,K=new t("DmSyHDSM9eSLyvoLsPvDr5fRRFZ7Bfr3h3ULvWpgQaq7"),j=new t("EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"),U=[new t("3ogYncmMM5CmytsGCqKHydmXmKUZ6sGWvizkzqwT7zb1"),new t("DM1jJCkZZEwY5tmWbgvKRxsDFzXCdbfrYCCH1CtwguEs"),new t("ADCp4QXFajHrhy4f43pD6GJFtQLkdBY2mjS9DfCk7tNW")],X=new Map([["EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v","USDC"],["Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB","USDT"],["So11111111111111111111111111111111111111112","SOL"],["EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp","FIDA"],["FeGn77dhg1KXRRFeSwwMiykZnZPw5JXW6naf2aQgZDQf","ETH"],["7i5KKsX2weiTkry7jA4ZwSuXGhs5eJBEjY8vVxR4pfRx","GMT"],["AFbX8oGjGpmVFywbVouvhQSRmiW2aR1mohfahi4Y2AdB","GST"],["mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So","MSOL"],["DezXAZ8z7PnrnRJjz3wXBoRgixCa6xjnB7YaB1pPB263","BONK"],["EPeUFDgHRxs9xxEPVaL6kfGQvCon7jmAWKVUHuux1Tpz","BAT"]]),Y=new t("AHtgzX45WTKfkPG53L6WYhGEXwQkN1BVknET3sVsLL8J"),Z=new t("GcWEQ9K78FV7LEHteFVciYApERk5YvQuFDQPk1yYJVXi"),q=t=>{const e=L+t,r=h(a.from(e,"utf8")).slice(2);return a.from(r,"hex")},O=(e,r,i)=>{const n=[e];r?n.push(r.toBuffer()):n.push(a.alloc(32)),i?n.push(i.toBuffer()):n.push(a.alloc(32));const[s]=t.findProgramAddressSync(n,H);return s};async function V(t,e){const r=q(e.toBase58()),i=O(r,N),{registry:a}=await ct.retrieve(t,i);if(!a.data)throw new Error("Could not retrieve name data");const n=new l(a.data.slice(0,4),"le").toNumber();return a.data.slice(4,4+n).toString()}async function J(t,e){let r=[];for(let t of e){const e=q(t.toBase58()),i=O(e,N);r.push(i)}return(await ct.retrieveBatch(t,r)).map((t=>{if(void 0===t||void 0===t.data)return;let e=new l(t.data.slice(0,4),"le").toNumber();return t.data.slice(4,4+e).toString()}))}const Q=async(t,e)=>{const r=[{memcmp:{offset:0,bytes:e.toBase58()}},{memcmp:{offset:64,bytes:N.toBase58()}}],i=await t.getProgramAccounts(H,{filters:r}),a=await V(t,e),n=i.map((t=>{var e;return null===(e=t.account.data.slice(97).toString("utf-8"))||void 0===e?void 0:e.split("\0").join("")})),s=n.map((t=>$(t+"."+a).pubkey)),o=await t.getMultipleAccountsInfo(s);return n.filter(((t,e)=>!!o[e]))},_=(t,e=z)=>{let r=q(t);return{pubkey:O(r,void 0,e),hashed:r}},$=(t,e=!1)=>{t.endsWith(".sol")&&(t=t.slice(0,-4));const r=t.split(".");if(2===r.length){const t=a.from([e?1:0]).toString().concat(r[0]),{pubkey:i}=_(r[1]);return{..._(t,i),isSub:!0,parent:i}}if(3===r.length&&e){const{pubkey:t}=_(r[2]),{pubkey:e}=_("\0".concat(r[1]),t),i=a.from([1]).toString();return{..._(i.concat(r[0]),e),isSub:!0,parent:t,isSubRecord:!0}}if(r.length>=3)throw new Error("Invalid derivation input");return{..._(t,z),isSub:!1,parent:void 0}};async function tt(t,e){const r=[{memcmp:{offset:32,bytes:e.toBase58()}},{memcmp:{offset:0,bytes:z.toBase58()}}];return(await t.getProgramAccounts(H,{filters:r})).map((t=>t.pubkey))}const et=async t=>{const e=[{memcmp:{offset:0,bytes:z.toBase58()}}];return await t.getProgramAccounts(H,{dataSlice:{offset:32,length:32},filters:e})},rt=(t,e)=>{const{pubkey:r,parent:i}=$(t),a=q(r.toBase58());return O(a,N,e?i:void 0)},it=async(e,r)=>{try{const[i]=await t.findProgramAddress([m,r.toBuffer()],d);console.log("mint",i.toBase58());if("0"===(await s(e,i)).supply.toString())return;const a=[{memcmp:{offset:0,bytes:i.toBase58()}},{memcmp:{offset:64,bytes:"2"}},{dataSize:165}],o=await e.getProgramAccounts(n,{filters:a});if(1!=o.length)return;return new t(o[0].account.data.slice(32,64))}catch{return}},at=async e=>{const r=await e.getProgramAccounts(d,{filters:[{memcmp:{offset:0,bytes:"3"}}]});return r.map((e=>new t(e.account.data.slice(66,98))))},nt=t=>[{memcmp:{offset:32,bytes:t}},{memcmp:{offset:64,bytes:"2"}}],st=async(t,e)=>{const r=[...nt(e.toBase58()),{dataSize:165}],i=(await t.getProgramAccounts(n,{filters:r})).map((t=>o.decode(t.account.data))).map((e=>(async(t,e)=>{const r=await y(t,e.mint);if(1===r.length)return g.deserialize(r[0].account.data)})(t,e)));return(await Promise.all(i)).filter((t=>void 0!==t))},ot=async(t,e)=>{const r=await st(t,e);return(await J(t,r.map((t=>t.nameAccount)))).map(((t,e)=>({key:r[e].nameAccount,mint:r[e].nftMint,reverse:t}))).filter((t=>!!t.reverse))};class ct{constructor(e){this.parentName=new t(e.parentName),this.owner=new t(e.owner),this.class=new t(e.class)}static async retrieve(t,e){var r;const i=await t.getAccountInfo(e);if(!i)throw new Error("Invalid name account provided");let a=f(this.schema,ct,i.data);a.data=null===(r=i.data)||void 0===r?void 0:r.slice(this.HEADER_LEN);return{registry:a,nftOwner:await it(t,e)}}static async _retrieveBatch(t,e){const r=await t.getMultipleAccountsInfo(e),i=t=>{if(!t)return;const e=f(this.schema,ct,t);return e.data=null==t?void 0:t.slice(this.HEADER_LEN),e};return r.map((t=>i(null==t?void 0:t.data)))}static async retrieveBatch(t,e){let r=[];const i=[...e];for(;i.length>0;)r.push(...await this._retrieveBatch(t,i.splice(0,100)));return r}}ct.HEADER_LEN=96,ct.schema=new Map([[ct,{kind:"struct",fields:[["parentName",[32]],["owner",[32]],["class",[32]]]}]]);class ut{constructor(t){this.name=t.name,this.ticker=t.ticker,this.mint=t.mint,this.decimals=t.decimals,this.website=null==t?void 0:t.website,this.logoUri=null==t?void 0:t.logoUri}serialize(){return w(ut.schema,this)}static deserialize(t){return f(ut.schema,ut,t)}}ut.schema=new Map([[ut,{kind:"struct",fields:[["name","string"],["ticker","string"],["mint",[32]],["decimals","u8"],["website",{kind:"option",type:"string"}],["logoUri",{kind:"option",type:"string"}]]}]]);class lt{constructor(t){this.mint=t.mint}serialize(){return w(lt.schema,this)}static deserialize(t){return f(lt.schema,lt,t)}}async function wt(t,e){if(!await t.getAccountInfo(e))throw new Error("Unable to find the given account.");return ct.retrieve(t,e)}async function ft(t){const e=L+t,r=h(a.from(e,"utf8")).slice(2);return a.from(r,"hex")}async function pt(e,r,i){const n=[e];r?n.push(r.toBuffer()):n.push(a.alloc(32)),i?n.push(i.toBuffer()):n.push(a.alloc(32));const[s]=await t.findProgramAddress(n,H);return s}async function mt(t,e){const r=await ft(e.toBase58()),i=await pt(r,N),{registry:a}=await ct.retrieve(t,i);if(!a.data)throw new Error("Could not retrieve name data");const n=new l(a.data.slice(0,4),"le").toNumber();return a.data.slice(4,4+n).toString()}async function dt(t,e){let r=[];for(let t of e){const e=await ft(t.toBase58()),i=await pt(e,N);r.push(i)}return(await ct.retrieveBatch(t,r)).map((t=>{if(void 0===t||void 0===t.data)return;let e=new l(t.data.slice(0,4),"le").toNumber();return t.data.slice(4,4+e).toString()}))}lt.schema=new Map([[lt,{kind:"struct",fields:[["mint",[32]]]}]]);const yt=async(t,e=z)=>{let r=await ft(t);return{pubkey:await pt(r,void 0,e),hashed:r}},gt=async(t,e=!1)=>{t.endsWith(".sol")&&(t=t.slice(0,-4));const r=t.split(".");if(2===r.length){const t=a.from([e?1:0]).toString().concat(r[0]),{pubkey:i}=await yt(r[1]);return{...await yt(t,i),isSub:!0,parent:i}}if(3===r.length&&e){const{pubkey:t}=await yt(r[2]),{pubkey:e}=await yt("\0".concat(r[1]),t),i=a.from([1]).toString();return{...await yt(i.concat(r[0]),e),isSub:!0,parent:t,isSubRecord:!0}}if(r.length>=3)throw new Error("Invalid derivation input");return{...await yt(t,z),isSub:!1,parent:void 0}},ht=async(t,e)=>{const{pubkey:r,parent:i}=await gt(t),a=await ft(r.toBase58());return await pt(a,N,e?i:void 0)};async function bt(t,e,i,a,n,s,o,c){const u=await ft(e),l=await pt(u,o,c),w=s||await t.getMinimumBalanceForRentExemption(i);let f;if(c){const{registry:e}=await wt(t,c);f=e.owner}return B(H,r.programId,l,n,a,u,new E(w),new v(i),o,c,f)}async function St(t,e,r,i,a,n){const s=await ft(e),o=await pt(s,a,n);let c;c=a||(await ct.retrieve(t,o)).registry.owner;return W(H,o,new v(r),i,c)}async function kt(t,e,r,i,a,n){const s=await ft(e),o=await pt(s,i,a);let c;c=i||(await ct.retrieve(t,o)).registry.owner;return A(H,o,r,c,i,a,n)}async function vt(t,e,r,i,a){const n=await ft(e),s=await pt(n,i,a);let o;o=i||(await ct.retrieve(t,s)).registry.owner;return I(H,s,r,o)}const Et=async(e,a,s,o,l,w=j,f)=>{const[p]=t.findProgramAddressSync([T.toBuffer()],T),m=q(a),d=O(m,void 0,z),y=q(d.toBase58()),g=O(y,p),[h]=t.findProgramAddressSync([d.toBuffer()],T),k=U.findIndex((t=>null==f?void 0:f.equals(t)));let v;const E=[];if(-1!==k&&f){v=c(w,f,!0);const t=await e.getAccountInfo(v);if(!(null==t?void 0:t.data)){const t=u(o,v,f,w);E.push(t)}}const B=new b(e,S("mainnet-beta")),W=await B.getData(),A=X.get(w.toBase58());if(!A)throw new Error("Symbol not found");const I=W.productPrice.get("Crypto."+A+"/USD"),R=W.productFromSymbol.get("Crypto."+A+"/USD"),D=c(w,Z),L=new P({name:a,space:s,referrerIdxOpt:-1!=k?k:null}).getInstruction(T,H,z,d,g,r.programId,p,o,l,Y,I.productAccountKey,new t(R.price_account),D,n,i,h,v);return E.push(L),[[],E]},Bt=async(e,r,a,n,s)=>{let[o]=await t.findProgramAddress([T.toBuffer()],T),c=await ft(e.toBase58()),u=await pt(c,o,n);return[[],[new D({name:r}).getInstruction(T,i,H,z,u,o,a,n,s)]]},Wt=async(t,e,r,i=2e3)=>{const a=[],n=e.split(".")[0];if(!n)throw new Error("Invalid subdomain input");const{parent:s,pubkey:o}=$(e),c=await t.getMinimumBalanceForRentExemption(i+ct.HEADER_LEN),u=await bt(t,"\0".concat(n),i,r,r,c,void 0,s);a.push(u);const[,l]=await Bt(o,"\0".concat(n),r,s,r);return a.push(...l),[[],a]};async function At(t,e,i,a,n){const s=await ft(e),o=await pt(s,void 0,x),c=await t.getMinimumBalanceForRentExemption(a+ct.HEADER_LEN);let u=[B(H,r.programId,o,i,n,s,new E(c),new v(a),void 0,x,M)];return u=u.concat(await Ft(t,e,o,i,n)),u}async function It(t,e,r,i){const a=await ft(t),n=await pt(a,void 0,x);return[W(H,n,new v(r),i,e)]}async function Rt(t,e,r,i,a){const n=await ft(e),s=await pt(n,void 0,x);let o=[A(H,s,i,r,void 0)];const c=await ft(r.toString());return await pt(c,M,void 0),o.push(await vt(t,r.toString(),a,M,x)),o=o.concat(await Ft(t,e,s,i,a)),o}async function Dt(t,e){const r=await ft(t),i=await pt(r,void 0,x),a=await ft(e.toString()),n=await pt(a,M,x);return[I(H,i,e,e),I(H,n,e,e)]}async function Pt(t){const e=await ft(t);return await pt(e,void 0,x)}async function Ht(t,e){const r=await ft(e),i=await pt(r,void 0,x),{registry:a}=await ct.retrieve(t,i);return a}async function Lt(e,r){const i=await ft(r.toString()),a=await pt(i,M,x);let n=await Ct.retrieve(e,a);return[n.twitterHandle,new t(n.twitterRegistryKey)]}async function zt(e,r){const i=[{memcmp:{offset:0,bytes:x.toBase58()}},{memcmp:{offset:32,bytes:r.toBase58()}},{memcmp:{offset:64,bytes:M.toBase58()}}],a=await e.getProgramAccounts(H,{filters:i});for(const e of a)if(e.account.data.length>ct.HEADER_LEN+32){let r=e.account.data.slice(ct.HEADER_LEN),i=f(Ct.schema,Ct,r);return[i.twitterHandle,new t(i.twitterRegistryKey)]}throw new Error("Registry not found.")}async function Tt(e,r){const i=[{memcmp:{offset:0,bytes:x.toBase58()}},{memcmp:{offset:32,bytes:r.toBase58()}},{memcmp:{offset:64,bytes:new t(a.alloc(32,0)).toBase58()}}],n=await e.getProgramAccounts(H,{filters:i});if(n.length>1)throw new Error("Found more than one registry.");return n[0].account.data.slice(ct.HEADER_LEN)}class Ct{constructor(t){this.twitterRegistryKey=t.twitterRegistryKey,this.twitterHandle=t.twitterHandle}static async retrieve(t,e){let r=await t.getAccountInfo(e,"processed");if(!r)throw new Error("Invalid reverse Twitter account provided");return f(this.schema,Ct,r.data.slice(ct.HEADER_LEN))}}async function Ft(t,e,i,n,s){const o=await ft(n.toString()),c=await pt(o,M,x);let u=w(Ct.schema,new Ct({twitterRegistryKey:i.toBytes(),twitterHandle:e}));return[B(H,r.programId,c,n,s,o,new E(await t.getMinimumBalanceForRentExemption(u.length+ct.HEADER_LEN)),new v(u.length),M,x,M),W(H,c,new v(0),a.from(u),M)]}Ct.schema=new Map([[Ct,{kind:"struct",fields:[["twitterRegistryKey",[32]],["twitterHandle","string"]]}]]);const Nt=new t("6NSu2tci4apRKQtt257bAVcvqYjB3zV2H1dWo56vgpa6"),Mt=async(t,e)=>{const r=await pt(await ft(e.toBase58()),void 0,Nt),{registry:i}=await ct.retrieve(t,r);if(!i.data)throw new Error("Invalid account data");return ut.deserialize(i.data)},xt=async(e,r)=>{const i=await pt(await ft(r),void 0,Nt),{registry:a}=await ct.retrieve(e,i);if(!a.data)throw new Error("Invalid account data");const n=new t(lt.deserialize(a.data).mint);return await Mt(e,n)},Gt=new t("85iDfUvr3HJyLM2zcq5BXSiDvUWfw6cSE1FfNBo8Ap29");class Kt{constructor(e){this.tag=e.tag,this.nameAccount=new t(e.nameAccount)}static deserialize(t){return p(this.schema,Kt,t)}static async retrieve(t,e){const r=await t.getAccountInfo(e);if(!r||!r.data)throw new Error("Favourite domain not found");return this.deserialize(r.data)}static async getKey(e,r){return await t.findProgramAddress([a.from("favourite_domain"),r.toBuffer()],e)}static getKeySync(e,r){return t.findProgramAddressSync([a.from("favourite_domain"),r.toBuffer()],e)}}Kt.schema=new Map([[Kt,{kind:"struct",fields:[["tag","u8"],["nameAccount",[32]]]}]]);const jt=async(e,r)=>{const[i]=Kt.getKeySync(Gt,new t(r)),a=await Kt.retrieve(e,i),n=await V(e,a.nameAccount);return{domain:a.nameAccount,reverse:n}};var Ut;!function(t){t.IPFS="IPFS",t.ARWV="ARWV",t.SOL="SOL",t.ETH="ETH",t.BTC="BTC",t.LTC="LTC",t.DOGE="DOGE",t.Email="email",t.Url="url",t.Discord="discord",t.Github="github",t.Reddit="reddit",t.Twitter="twitter",t.Telegram="telegram",t.Pic="pic",t.SHDW="SHDW",t.POINT="POINT",t.BSC="BSC",t.Injective="INJ",t.Backpack="backpack"}(Ut||(Ut={}));const Xt=t=>{if(!t)return;const e=Array.from(t);return e.length-1-e.reverse().findIndex((t=>0!==t))+1},Yt=(t,e)=>{const{pubkey:r}=$(e+"."+t,!0);return r},Zt=async(t,e,r)=>{var i;const a=Yt(e,r);let{registry:n}=await ct.retrieve(t,a);const s=r===Ut.SOL?96:Xt(n.data);return n.data=null===(i=n.data)||void 0===i?void 0:i.slice(0,s),n},qt=async(t,e,r)=>{const i=r.map((t=>Yt(e,t)));return(await ct.retrieveBatch(t,i)).map(((t,e)=>{var i;if(!t)return;const a=r[e]===Ut.SOL?96:Xt(t.data);return t.data=null===(i=null==t?void 0:t.data)||void 0===i?void 0:i.slice(0,a),t}))},Ot=async(t,e)=>await Zt(t,e,Ut.IPFS),Vt=async(t,e)=>await Zt(t,e,Ut.ARWV),Jt=async(t,e)=>await Zt(t,e,Ut.ETH),Qt=async(t,e)=>await Zt(t,e,Ut.BTC),_t=async(t,e)=>await Zt(t,e,Ut.LTC),$t=async(t,e)=>await Zt(t,e,Ut.DOGE),te=async(t,e)=>await Zt(t,e,Ut.Email),ee=async(t,e)=>await Zt(t,e,Ut.Url),re=async(t,e)=>await Zt(t,e,Ut.Discord),ie=async(t,e)=>await Zt(t,e,Ut.Github),ae=async(t,e)=>await Zt(t,e,Ut.Reddit),ne=async(t,e)=>await Zt(t,e,Ut.Twitter),se=async(t,e)=>await Zt(t,e,Ut.Telegram),oe=async(t,e)=>await Zt(t,e,Ut.Pic),ce=async(t,e)=>await Zt(t,e,Ut.SHDW),ue=async(t,e)=>await Zt(t,e,Ut.SOL),le=async(t,e)=>await Zt(t,e,Ut.POINT),we=async(t,e)=>await Zt(t,e,Ut.BSC),fe=async(t,e)=>await Zt(t,e,Ut.Injective),pe=async(t,e)=>await Zt(t,e,Ut.Backpack),me=(t,e,r)=>k.sign.detached.verify(t,e,r.toBytes()),de=async(e,r)=>{const{pubkey:i}=$(r),{registry:n,nftOwner:s}=await ct.retrieve(e,i);if(s)return s;try{const i=$(Ut.SOL+"."+r,!0),s=await ue(e,r);if(!s.data)throw new Error("Invalid SOL record data");const o=new TextEncoder,c=a.concat([s.data.slice(0,32),i.pubkey.toBuffer()]),u=o.encode(c.toString("hex"));if(!me(u,s.data.slice(32),n.owner))throw new Error("Signature invalid");return new t(s.data.slice(0,32))}catch(t){if(t instanceof Error&&"FetchError"===t.name)throw t;console.log(t)}return n.owner};export{F as BONFIDA_FIDA_BNB,K as BONFIDA_USDC_BNB,Kt as FavouriteDomain,L as HASH_PREFIX,lt as Mint,Gt as NAME_OFFERS_ID,H as NAME_PROGRAM_ID,ct as NameRegistryState,v as Numberu32,E as Numberu64,C as PYTH_FIDA_PRICE_ACC,Y as PYTH_MAPPING_ACC,U as REFERRERS,T as REGISTER_PROGRAM_ID,N as REVERSE_LOOKUP_CLASS,z as ROOT_DOMAIN_ACCOUNT,Ut as Record,Ct as ReverseTwitterRegistryState,G as SOL_RECORD_SIG_LEN,X as TOKENS_SYM_MINT,Nt as TOKEN_TLD,x as TWITTER_ROOT_PARENT_REGISTRY_KEY,M as TWITTER_VERIFICATION_AUTHORITY,ut as TokenData,j as USDC_MINT,Z as VAULT_OWNER,It as changeTwitterRegistryData,Rt as changeVerifiedPubkey,me as checkSolRecord,B as createInstruction,P as createInstructionV3,bt as createNameRegistry,D as createReverseInstruction,Bt as createReverseName,Ft as createReverseTwitterRegistry,Wt as createSubdomain,R as createV2Instruction,At as createVerifiedTwitterRegistry,I as deleteInstruction,vt as deleteNameRegistry,Dt as deleteTwitterRegistry,Q as findSubdomains,tt as getAllDomains,et as getAllRegisteredDomains,Vt as getArweaveRecord,pe as getBackpackRecord,we as getBscRecord,Qt as getBtcRecord,re as getDiscordRecord,$t as getDogeRecord,gt as getDomainKey,$ as getDomainKeySync,te as getEmailRecord,Jt as getEthRecord,jt as getFavoriteDomain,ie as getGithubRecord,Lt as getHandleAndRegistryKey,ft as getHashedName,q as getHashedNameSync,fe as getInjectiveRecord,Ot as getIpfsRecord,_t as getLtcRecord,pt as getNameAccountKey,O as getNameAccountKeySync,wt as getNameOwner,oe as getPicRecord,le as getPointRecord,Zt as getRecord,Yt as getRecordKeySync,qt as getRecords,ae as getRedditRecord,ht as getReverseKey,rt as getReverseKeySync,ce as getShdwRecord,ue as getSolRecord,se as getTelegramRecord,Mt as getTokenInfoFromMint,xt as getTokenInfoFromName,ot as getTokenizedDomains,zt as getTwitterHandleandRegistryKeyViaFilters,ne as getTwitterRecord,Ht as getTwitterRegistry,Tt as getTwitterRegistryData,Pt as getTwitterRegistryKey,ee as getUrlRecord,mt as performReverseLookup,dt as performReverseLookupBatch,Et as registerDomainName,de as resolve,it as retrieveNftOwner,at as retrieveNfts,V as reverseLookup,J as reverseLookupBatch,A as transferInstruction,kt as transferNameOwnership,W as updateInstruction,St as updateNameRegistryData};
